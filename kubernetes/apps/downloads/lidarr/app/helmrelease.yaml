# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: lidarr
spec:
  interval: 1h
  timeout: 5m
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 5
  values:
    controllers:
      lidarr:
        pod:
          securityContext:
            runAsUser: 1000
            runAsGroup: 100
            fsGroup: 100
            fsGroupChangePolicy: OnRootMismatch
        containers:
          main:
            image:
              repository: ghcr.io/home-operations/lidarr
              tag: 3.0.1
            env:
              TZ: Europe/Oslo
              LIDARR__APP__INSTANCENAME: Lidarr
              LIDARR__APP__THEME: dark
              LIDARR__AUTH__METHOD: External
              LIDARR__AUTH__REQUIRED: DisabledForLocalAddresses
              LIDARR__LOG__DBENABLED: "False"
              LIDARR__LOG_LEVEL: info
              LIDARR__SERVER__PORT: &port 8686
            envFrom:
              - secretRef:
                  name: "{{ .Release.Name }}-secret"
            resources:
              requests:
                cpu: 15m
                memory: 352Mi
              limits:
                memory: 408Mi
            probes:
              startup:
                enabled: false
              liveness:
                enabled: true
              readiness:
                enabled: true
    service:
      main:
        controller: lidarr
        ports:
          http:
            port: *port
    route:
      main:
        hostnames: ["{{ .Release.Name }}.${SECRET_DOMAIN}"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - name: lidarr
                port: *port
    persistence:
      config:
        existingClaim: lidarr
      media:
        type: nfs
        server: 192.168.1.10
        path: /mnt/wolf/musikk
        globalMounts:
          - path: /media
      tmp:
        type: emptyDir

# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: audiobookshelf
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      audiobookshelf:
        pod:
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 100
            fsGroup: 100
            fsGroupChangePolicy: OnRootMismatch
            seccompProfile: {type: RuntimeDefault}
        containers:
          app:
            image:
              repository: ghcr.io/advplyr/audiobookshelf
              tag: 2.30.0@sha256:6fbd7dc95d53c6e168ce69e760b87c334e3b9ba88bf7b8531ed5a116d5d6da03
            env:
              TZ: "Europe/Oslo"
              AUDIOBOOKSHELF_UID: 1000
              AUDIOBOOKSHELF_GID: 100
              CONFIG_PATH: /config
              METADATA_PATH: /config/metadata
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /healthcheck
                    port: &port 80
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: {drop: ["ALL"]}
            resources:
              requests:
                cpu: 50m
                memory: 500Mi
              limits:
                memory: 1500Mi
    service:
      app:
        annotations:
          tailscale.com/expose: "true"
        primary: true
        controller: audiobookshelf
        ports:
          http:
            port: *port
    route:
      main:
        hostnames: ["lydbok.${SECRET_DOMAIN}", "audiobookshelf.${SECRET_DOMAIN}"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
    persistence:
      config:
        existingClaim: "{{ .Release.Name }}"
        globalMounts:
          - path: /config
      cache:
        type: emptyDir
        globalMounts:
          - path: /.npm
      media:
        enabled: true
        type: nfs
        server: 192.168.1.10
        path: /mnt/wolf/media
        globalMounts:
          - path: /media
            readOnly: false
      tmpfs:
        type: emptyDir
        globalMounts:
          - path: /tmp
